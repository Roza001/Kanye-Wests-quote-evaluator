{"version":3,"sources":["components/services/GetQuotes.js","components/services/GetPolarity.js","components/UI/Welcome.js","components/UI/Footer.js","components/UI/Main.js","App.js","reportWebVitals.js","index.js"],"names":["getQuotes","axios","get","then","response","data","getPolarity","text","post","headers","Accept","Welcome","className","Footer","href","target","Main","props","quote","q","sentiments","positive","negative","neutral","App","useState","setQuote","quotes","setQuotes","input","setInput","welcome","setWelcome","setSentiments","loading","setLoading","myFunc","locQuote","some","e","console","log","result","polarity","Math","abs","p","prevState","useEffect","length","forEach","item","obj","onSubmit","preventDefault","value","i","type","min","max","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9104f41.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n function getQuotes() {\r\n    return axios\r\n        .get(\"https://api.kanye.rest\")\r\n        .then((response) => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport default getQuotes;","import axios from 'axios';\r\n\r\nfunction getPolarity(text) {\r\n    return axios\r\n        .post(\"https://sentim-api.herokuapp.com/api/v1/\", {  text }, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then((response) => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nexport default getPolarity;","import React from \"react\";\r\nimport \"./css/Welcome.css\";\r\n\r\nfunction Welcome() {\r\n    return (\r\n        <div className=\"welcome\">\r\n            <h1>Kanye&nbsp;West's Quote&nbsp;Evalutor!</h1>\r\n            <h4 >Enter a number between 5 and 20. </h4>\r\n            <h4>This app will fetch this many random quotes from Kanye West and return the most extreme one! </h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import React from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './css/Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer flex-row\">\r\n            <h5>by Rozalia Korycka</h5>\r\n            <a className=\"button hover\" href=\"https://www.linkedin.com/in/rozalia-korycka-353633142/\" target=\"_none\">\r\n                <i className=\"fa fa-2x fa-linkedin w3-hover-opacity\"></i>\r\n            </a>\r\n\r\n            <a className=\"button hover\" href=\"https://github.com/Roza001\" target=\"_none\">\r\n                <i className=\"fa fa-2x fa-github\"></i>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./css/Main.css\"\r\n\r\nfunction Main(props) {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            {props.quote.q ? (\r\n                <>\r\n                    <h5>The most extreme quote:</h5>\r\n                    <h3>{props.quote.q}</h3>\r\n                    <p>\r\n                        In all fetched quotes\r\n                <br />\r\n                        <strong>{props.sentiments.positive}</strong> were rated as <strong>positive</strong>\r\n                        <br />\r\n                        <strong>{props.sentiments.negative}</strong> as <strong>negative</strong> and\r\n                <br />\r\n                        <strong>{props.sentiments.neutral}</strong> were rated as <strong>neutral</strong >\r\n                    </p>\r\n                </>\r\n            ) : (\r\n                    <h2>Try Again!</h2>\r\n                    )}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\nimport getQuotes from \"./components/services/GetQuotes.js\";\r\nimport getPolarity from \"./components/services/GetPolarity.js\";\r\nimport Welcome from \"./components/UI/Welcome.js\";\r\nimport Footer from \"./components/UI/Footer.js\";\r\nimport Main from \"./components/UI/Main.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n    const [quote, setQuote] = useState({});\r\n    const [quotes, setQuotes] = useState([]);\r\n    const [input, setInput] = useState();\r\n    const [welcome, setWelcome] = useState(true);\r\n    const [sentiments, setSentiments] = useState({\r\n        positive: 0,\r\n        neutral: 0,\r\n        negative: 0,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    var positive = 0;\r\n    var neutral = 0;\r\n    var negative = 0;\r\n\r\n\r\n    useEffect(() => {\r\n        if (quotes.length >= input - 1) {\r\n            setLoading(false);\r\n        }\r\n        quotes.forEach((item) => sentimentSwitch(item))\r\n    }, [quotes])\r\n\r\n    function myFunc() {\r\n        var locQuote = \"\";\r\n        getQuotes().then((response) => {\r\n            locQuote = response.quote;\r\n            getPolarity(response.quote).then((response) => {\r\n                if (quotes.some((e) => e.q === response.quote)) {\r\n                    console.log(\"repeat\");\r\n                    myFunc();\r\n                } else {\r\n                    if (response.result.polarity >= Math.abs(quote.p)) {\r\n                        setQuote({ q: locQuote, p: response.result.polarity });\r\n                    }\r\n                    //sentimentSwitch(response.result);\r\n                    setQuotes((prevState) => [\r\n                        ...prevState,\r\n                        { q: locQuote, p: response.result.polarity },\r\n                    ]);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    function sentimentSwitch(obj) {\r\n        if (obj.p < 0) {\r\n            setSentiments({ positive: sentiments.positive, neutral: sentiments.neutral, negative: sentiments.negative + 1 })\r\n        }\r\n        else if (obj.p === 0) {\r\n            setSentiments({ positive: sentiments.positive, neutral: sentiments.neutral + 1, negative: sentiments.negative })\r\n        }\r\n        else {\r\n            setSentiments({ positive: sentiments.positive + 1, neutral: sentiments.neutral, negative: sentiments.negative })\r\n        }\r\n\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        if (e.target[0].value) {\r\n            if (welcome) {\r\n                setWelcome(false);\r\n            }\r\n            setLoading(true);\r\n            setQuotes([]);\r\n            setQuote({ q: \"\", p: 0 });\r\n            setSentiments({\r\n                positive: 0,\r\n                neutral: 0,\r\n                negative: 0,\r\n            });\r\n            setInput(e.target[0].value);\r\n            for (var i = 0; i < e.target[0].value; i++) {\r\n                myFunc();\r\n                setSentiments({\r\n                    positive: positive,\r\n                    neutral: neutral,\r\n                    negative: negative,\r\n                });\r\n            }\r\n        }        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {welcome ? (\r\n                <Welcome />\r\n            ) : loading ? (\r\n                <span className=\"\" > LOADING</span>\r\n                ) : (\r\n                        <Main quote={quote} sentiments={sentiments} />\r\n                    )\r\n            }\r\n            <form className=\"form\" onSubmit={onSubmit}>\r\n                <input type=\"number\" min=\"5\" max=\"20\" />\r\n                <input className=\"button-submit\" type=\"submit\" value=\"submit\" />\r\n            </form>\r\n            <Footer />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}